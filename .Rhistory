---
```{r setup, include=FALSE}
source('C:/Users/aaron/OneDrive/Documents/Monash Data Science/Algorithms For Data Analysis/Activity.3.1.r')
theme_minimal()
ggplot(data=data, aes(x=x1, y=x2, color=label, label=ifelse(label==c0, '+', '-'))) +
geom_point(x=mu0[1], y=mu0[2], size=4, color = 'black') +
geom_point(x=mu1[1], y=mu1[2], size=4, color = 'black') +
geom_text(size = 5, alpha=0.5) +
ggtitle ('Data set') +
theme_minimal()
require(plotly)
bwSolar_ <- read.csv("C:/Users/aaron/OneDrive/Documents/City Energy Centre/Solar/IDCJAC0016_061387_1800_Data.csv")
plot_ly(x=bwSolar_$Year,y=bwSolar_$Daily.global.solar.exposure..MJ.m.m.)
bwSolar_$Date <- as.Date(paste(bwSolar_$Day,bwSolar_$Month,bwSolar_$Year,sep = '/'),'%d/%m/%Y')
View(bwSolar_)
bwSolar_$Date <- as.Date(paste(bwSolar_$Date,bwSolar_$Month,bwSolar_$Year,sep = '/'),'%d/%m/%Y')
bwSolar_ <- read.csv("C:/Users/aaron/OneDrive/Documents/City Energy Centre/Solar/IDCJAC0016_061387_1800_Data.csv")
bwSolar_$Date <- as.Date(paste(bwSolar_$Day,bwSolar_$Month,bwSolar_$Year,sep = '/'),'%d/%m/%Y')
plot_ly(x=bwSolar_$Date,y=bwSolar_$Daily.global.solar.exposure..MJ.m.m.)
cnSolar_ <- read.csv("C:/Users/aaron/OneDrive/Documents/City Energy Centre/Solar/IDCJAC0016_086096_1800_Data.csv")# Coburg North
cnSolar_$Date <- as.Date(paste(cnSolar_$Day,cnSolar_$Month,cnSolar_$Year,sep = '/'),'%d/%m/%Y')
sum(bwSolar_$Date[bwSolar_$Date > '01/01/2016'])
length(bwSolar_$Date[bwSolar_$Date > '01/01/2016'])
length(bwSolar_$Date[bwSolar_$Date > as.Date('01/01/2016')])
require(plotly) # for plotting
bwSolar_ <- read.csv("C:/Users/aaron/OneDrive/Documents/City Energy Centre/Solar/IDCJAC0016_061387_1800_Data.csv")# Budgewoi
cnSolar_ <- read.csv("C:/Users/aaron/OneDrive/Documents/City Energy Centre/Solar/IDCJAC0016_086096_1800_Data.csv")# Coburg North
bwSolar_$Date <- as.Date(paste(bwSolar_$Day,bwSolar_$Month,bwSolar_$Year,sep = '/'),'%d/%m/%Y') # budgewoi
cnSolar_$Date <- as.Date(paste(cnSolar_$Day,cnSolar_$Month,cnSolar_$Year,sep = '/'),'%d/%m/%Y')
View(bwSolar_)
View(cnSolar_)
View(bwSolar_)
bwSolar_ <- cbind(5759,bwSolar_)
View(bwSolar_)
cnSolar_ <- cbind(7919,cnSolar_)
View(cnSolar_)
bwSolar_ <- subset(bwSolar_,bwSolar_$Year >= 2015)
View(bwSolar_)
cnSolar_ <- subset(cnSolar_,cnSolar_$Year >= 2015)
tot_ <- rbind(bwSolar_,cnSolar_)
View(bwSolar_)
View(bwSolar_)
plBw_ <- subset(bwSolar_,select = c(bwSolar_$`5759`,bwSolar_$Daily.global.solar.exposure..MJ.m.m.,bwSolar_$Date))
plBw_ <- subset(bwSolar_,select = c("5759","Date","Daily.global.solar.exposure..MJ.m.m."))
View(plBw_)
colnames(plBw_) <- c("Store","Date","Solar.R")
View(plBw_)
plCn_ <- subset(cnSolar_,select = c("7919","Date","Daily.global.solar.exposure..MJ.m.m."))
colnames(plCn_) <- c("Store","Date","Solar.R")
View(plBw_)
View(plCn_)
tot_ <- rbind(plBw_,plCn_)
plot_ly(tot_, x = date, y = Solar.R, name = "unemployment",color = Store)
plot_ly(tot_, x = date, y = Solar.R, name = "unemployment")
View(tot_)
plot_ly(tot_, x = as.Date(date), y = Solar.R)
View(tot_)
plot_ly(tot_, x = as.Date(date,'%Y-%m-%d'), y = Solar.R)
plot_ly(tot_, x = as.Date(tot_$Date,'%Y-%m-%d'), y = Solar.R)
plot_ly(tot_, x = as.Date(tot_$Date,'%Y-%m-%d'), y = Solar.R,color = tot_$Store)
plot_ly(tot_, x = as.Date(tot_$Date,'%Y-%m-%d'), y = Solar.R,colors = tot_$Store)
dens <- with(diamonds, tapply(price, INDEX = cut, density))
df <- data.frame(
x = unlist(lapply(dens, "[[", "x")),
y = unlist(lapply(dens, "[[", "y")),
cut = rep(names(dens), each = length(dens[[1]]$x))
)
View(df)
plot_ly(tot_, x = as.Date(tot_$Date,'%Y-%m-%d'), y = Solar.R,color=as.factor(tot_$Store))
plot_ly(tot_, x = as.Date(tot_$Date,'%Y-%m-%d'), y = Solar.R,color=as.factor(tot_$Store),title(main = "hi"))
plt_ <- plot_ly(tot_, x = as.Date(tot_$Date,'%Y-%m-%d'), y = Solar.R,color=as.factor(tot_$Store))
plt_ <- layout(plt_,title = "unemployment")
plt_
plt_ <- plot_ly(tot_, x = as.Date(tot_$Date,'%Y-%m-%d'), y = Solar.R,color=as.factor(tot_$Store))
plt_ <- layout(plt_,title = "Solar Exposure by Year 2015+",xaxis = "Date")
plt_
plt_ <- layout(plt_,title = "Solar Exposure by Year 2015+",xaxis = list(title="Date"))
plt_ <- plot_ly(tot_, x = as.Date(tot_$Date,'%Y-%m-%d'), y = Solar.R,color=as.factor(tot_$Store))
plt_ <- layout(plt_,title = "Solar Exposure by Year 2015+",xaxis = list(title="Date"))
plt_
plot_ly(x = tot_$Solar.R,type = "histogram")
plot_ly(x = plBw_, plBw_$Solar.R,type = "histogram")
plot_ly(x = plBw_$Solar.R, type = "histogram")
plot_ly(x = plBw_$Solar.R, type = "histogram") %>% add_trace(x=plCn_$Solar.R,type="histogram") %>% layout(barmode="overlay")
plot_ly(x = plBw_$Solar.R, type = "histogram",name="5759") %>% add_trace(x=plCn_$Solar.R,type="histogram",name="7919") %>% layout(barmode="overlay")
plot_ly(x = plBw_$Solar.R, type = "histogram",name="5759") %>% add_trace(x=plCn_$Solar.R,type="histogram",name="7919") %>% layout(barmode="overlay",title="Soar Radiation Histogram")
plot_ly(x = plBw_$Solar.R, type = "histogram",name="5759") %>% add_trace(x=plCn_$Solar.R,type="histogram",name="7919") %>% layout(barmode="overlay",title="Soar Radiation Histogram",xaxis=list(title="Solar R MJ/m.m"),yaxis=list(title="Frequency"))
plot_ly(x = plBw_$Solar.R, type = "histogram",name="5759",opacity = 0.6) %>% add_trace(x=plCn_$Solar.R,type="histogram",name="7919", opacity=0.6) %>% layout(barmode="overlay",title="Soar Radiation Histogram",xaxis=list(title="Solar R MJ/m.m"),yaxis=list(title="Frequency"))
bwEnergy_ <- read.csv("C:/Users/aaron/OneDrive/Documents/City Energy Centre/Solar/5759MainMeterReadings.csv")
View(bwEnergy_)
cnEnergy_ <- read.csv("C:/Users/aaron/OneDrive/Documents/City Energy Centre/Solar/7919MainMeterReadings.csv")
View(bwEnergy_)
View(bwSolar_)
View(cnEnergy_)
bwEnergy_ <- read.csv("C:/Users/aaron/OneDrive/Documents/City Energy Centre/Solar/5759MainMeterReadings.csv",stringsAsFactors = FALSE)
cnEnergy_ <- read.csv("C:/Users/aaron/OneDrive/Documents/City Energy Centre/Solar/7919MainMeterReadings.csv",stringsAsFactors = FALSE)
bwEnergy_$Calendar.Day <- as.Date(bwEnergy_$Calendar.Day,"%d %B %Y")
str(bwEnergy_)
View(bwEnergy_)
cnEnergy_$Calendar.Day <- as.Date(cnEnergy_$Calendar.Day,"%d %B %Y")
View(cnSolar_)
View(cnEnergy_)
bwEnergy_ <- cbind(5759,bwEnergy_)
cnEnergy_ <- cbind(7919,cnEnergy_)
colnames(bwEnergy_) <- c("Store","Date","Consumption")
View(bwEnergy_)
colnames(cnEnergy_) <- c("Store","Date","Consumption")
eTot_ <- rbind(bwEnergy_,cnEnergy_)
View(eTot_)
plt_ <- plot_ly(eTot_,x=as.Date(eTot_$Date,"%Y-%m-%d"),y=eTot_$Store, color = as.factor(eTot_$Store))
plt_
plt_ <- plot_ly(eTot_,x=as.Date(eTot_$Date,"%Y-%m-%d"),y=eTot_$Consumption, color = as.factor(eTot_$Store))
plt_
plt_ <- plot_ly(eTot_,x=as.Date(eTot_$Date,"%Y-%m-%d"),y=eTot_$Consumption, color = as.factor(eTot_$Store)) %>% layout(plt_,title = "Solar Exposure by Year",xaxis = list(title="Date"),yaxis=list(title="Solar Radiation MJ/m.m"))
plt_
bwAmbient_ <- read.csv("C:/Users/aaron/OneDrive/Documents/City Energy Centre/Solar/5759AmbientData.csv",stringsAsFactors = FALSE)
cnAmbient_ <- read.csv("C:/Users/aaron/OneDrive/Documents/City Energy Centre/Solar/7919AmbientData.csv",stringsAsFactors = FALSE)
View(bwAmbient_)
bwAmbient_$Calendar.Day <- as.Date(bwAmbient_$Calendar.Day,"%d %B %Y")
cnAmbient_$Calendar.Day <- as.Date(cnAmbient_$Calendar.Day,"%d %B %Y")
View(bwAmbient_)
tmp_ <- bwAmbient_[complete.cases(bwAmbient_),]
View(tmp_)
tmp2_ <- bwAmbient_[bwAmbient_$Calendar.Day > as.Date("2012-01-01","%Y-%m-%d"),]
View(tmp2_)
tmp2_ <- bwAmbient_[bwAmbient_$Calendar.Day >= as.Date("2012-01-01","%Y-%m-%d"),]
bwAmbient_ <- bwAmbient_[complete.cases(bwAmbient_),]
cnAmbient_ <- cnAmbient_[complete.cases(cnAmbient_),]
View(bwAmbient_)
remove(tmp_)
remove(tmp2_)
plot_ly(bwAmbient_,x=as.Date(bwAmbient_$Calendar.Day,"%Y-%m-%d"))
plot_ly(bwAmbient_,x=as.Date(bwAmbient_$Calendar.Day,"%Y-%m-%d"),y=bwAmbient_$Temperature...Avg) %>% add_trace(y=bwAmbient_$Relative.Humidity...Avg)
View(bwAmbient_)
plot_ly(bwAmbient_,x=as.Date(bwAmbient_$Calendar.Day,"%Y-%m-%d"),y=bwAmbient_$Temperature...Avg) %>% add_trace(x=as.Date(bwAmbient_$Calendar.Day,"%Y-%m-%d"),y=bwAmbient_$Relative.Humidity...Avg)
plot_ly(bwAmbient_,x=as.Date(bwAmbient_$Calendar.Day,"%Y-%m-%d"),y=bwAmbient_$Temperature...Avg, name="Temperature") %>% add_trace(x=as.Date(bwAmbient_$Calendar.Day,"%Y-%m-%d"),y=bwAmbient_$Relative.Humidity...Avg,name="Relative Humidity")
plot_ly(bwAmbient_,x=as.Date(bwAmbient_$Calendar.Day,"%Y-%m-%d"),y=bwAmbient_$Temperature...Avg, name="Temperature") %>% add_trace(x=as.Date(bwAmbient_$Calendar.Day,"%Y-%m-%d"),y=bwAmbient_$Relative.Humidity...Avg,name="Relative Humidity",yaxis="y2")
plot_ly(bwAmbient_,x=as.Date(bwAmbient_$Calendar.Day,"%Y-%m-%d"),y=bwAmbient_$Temperature...Avg, name="Temperature") %>% add_trace(x=as.Date(bwAmbient_$Calendar.Day,"%Y-%m-%d"),y=bwAmbient_$Relative.Humidity...Avg,name="Relative Humidity") %>% layout(title="5759 Ambient Temperature and Relative Humidity",xaxis=list(title="Date"),yaxis=list(title="Value"))
plot_ly(bwAmbient_,x=as.Date(bwAmbient_$Calendar.Day,"%Y-%m-%d"),y=bwAmbient_$Temperature...Avg, name="Temperature") %>% add_trace(x=as.Date(bwAmbient_$Calendar.Day,"%Y-%m-%d"),y=bwAmbient_$Relative.Humidity...Avg,name="Relative Humidity") %>% layout(title="5759 Ambient Temperature and Relative Humidity",xaxis=list(title="Date"),yaxis=list(title="Value *C/%"))
bwSolar_ <- read.csv("C:/Users/aaron/OneDrive/Documents/City Energy Centre/Solar/IDCJAC0016_061387_1800_Data.csv")# Budgewoi
cnSolar_ <- read.csv("C:/Users/aaron/OneDrive/Documents/City Energy Centre/Solar/IDCJAC0016_086096_1800_Data.csv")# Coburg North
# The date column is separated into Year | Month | Day , so combine them and format as date.
bwSolar_$Date <- as.Date(paste(bwSolar_$Day,bwSolar_$Month,bwSolar_$Year,sep = '/'),'%d/%m/%Y') # budgewoi
cnSolar_$Date <- as.Date(paste(cnSolar_$Day,cnSolar_$Month,cnSolar_$Year,sep = '/'),'%d/%m/%Y') # coburg north
# add the store num to the data frames.
bwSolar_ <- cbind(5759,bwSolar_)
cnSolar_ <- cbind(7919,cnSolar_)
# Subset for year 2015 onwards
bwSolar_ <- subset(bwSolar_,bwSolar_$Year >= 2014)
cnSolar_ <- subset(cnSolar_,cnSolar_$Year >= 2014)
# extract plot variables.
plBw_ <- subset(bwSolar_,select = c("5759","Date","Daily.global.solar.exposure..MJ.m.m."))
colnames(plBw_) <- c("Store","Date","Solar.R") # standardise colnames
plCn_ <- subset(cnSolar_,select = c("7919","Date","Daily.global.solar.exposure..MJ.m.m."))
colnames(plCn_) <- c("Store","Date","Solar.R")
tot_ <- rbind(plBw_,plCn_) # merge both
# plot
plt_ <- plot_ly(tot_, x = as.Date(tot_$Date,'%Y-%m-%d'), y = Solar.R,color=as.factor(tot_$Store))
plt_ <- layout(plt_,title = "Solar Exposure by Year",xaxis = list(title="Date"),yaxis=list(title="Solar Radiation MJ/m.m"))
plt_
require(plotly) # for plotting
bwAmbient_ <- read.csv("C:/Users/aaron/OneDrive/Documents/City Energy Centre/Solar/5759AmbientData.csv",stringsAsFactors = FALSE)
cnAmbient_ <- read.csv("C:/Users/aaron/OneDrive/Documents/City Energy Centre/Solar/7919AmbientData.csv",stringsAsFactors = FALSE)
# recast date string as psixlt
bwAmbient_$Calendar.Day <- as.Date(bwAmbient_$Calendar.Day,"%d %B %Y")
cnAmbient_$Calendar.Day <- as.Date(cnAmbient_$Calendar.Day,"%d %B %Y")
# since we have alot of old and future data points subset these out.
# did a bit of testing, seems complete cases should give out good subset.
bwAmbient_ <- bwAmbient_[complete.cases(bwAmbient_),]
cnAmbient_ <- cnAmbient_[complete.cases(cnAmbient_),]
bwEnergy_ <- read.csv("C:/Users/aaron/OneDrive/Documents/City Energy Centre/Solar/5759MainMeterReadings.csv",stringsAsFactors = FALSE)
cnEnergy_ <- read.csv("C:/Users/aaron/OneDrive/Documents/City Energy Centre/Solar/7919MainMeterReadings.csv",stringsAsFactors = FALSE)
# recast date string as posixlt
bwEnergy_$Calendar.Day <- as.Date(bwEnergy_$Calendar.Day,"%d %B %Y")
cnEnergy_$Calendar.Day <- as.Date(cnEnergy_$Calendar.Day,"%d %B %Y")
# cbind store num and merge for plotting.
bwEnergy_ <- cbind(5759,bwEnergy_)
cnEnergy_ <- cbind(7919,cnEnergy_)
colnames(bwEnergy_) <- c("Store","Date","Consumption")
colnames(cnEnergy_) <- c("Store","Date","Consumption")
eTot_ <- rbind(bwEnergy_,cnEnergy_)
tmp_ <- bwAmbient_[bwAmbient_$Calendar.Day >= as.Date("01/07/2013","%d/%m%Y") & bwAmbient_$Calendar.Day <= as.Date("01/07/2014","%d/%m%Y"), ]
View(tmp_)
tmp_ <- bwAmbient_[bwAmbient_$Calendar.Day >= as.Date("01/07/2013","%d/%m%Y"), ]
View(tmp_)
tmp_ <- bwAmbient_[bwAmbient_$Calendar.Day >= as.Date("01/07/2013","%d/%m/%Y") & bwAmbient_$Calendar.Day <= as.Date("01/07/2014","%d/%m/%Y"), ]
View(tmp_)
bwEnergy_ <- bwEnergy_[bwEnergy_$Date >= as.Date("01/07/2013","%d/%m/%Y") & bwEnergy_$Date <= as.Date("01/07/2014","%d/%m/%Y"), ]
View(bwEnergy_)
bwEnergy_ <- read.csv("C:/Users/aaron/OneDrive/Documents/City Energy Centre/Solar/5759MainMeterReadings.csv",stringsAsFactors = FALSE)
bwEnergy_$Calendar.Day <- as.Date(bwEnergy_$Calendar.Day,"%d %B %Y")
bwEnergy_ <- cbind(5759,bwEnergy_)
View(tmp_)
require(sqldf)
# subset the baseline period
preSolarBLine <- function(){
# subset the budgewoi ambients.
bwAmbient_ <- bwAmbient_[bwAmbient_$Calendar.Day >= as.Date("01/07/2013","%d/%m/%Y") & bwAmbient_$Calendar.Day <= as.Date("01/07/2014","%d/%m/%Y"), ]
# subset energy
bwEnergy_ <- bwEnergy_[bwEnergy_$Date >= as.Date("01/07/2013","%d/%m/%Y") & bwEnergy_$Date <= as.Date("01/07/2014","%d/%m/%Y"), ]
# merge data frames
tot_ <- sqldf("SELECT * FROM bwAmbient_ JOIN bwEnergy_ ON bwAmbient_.Calender.Day = bwEnergy.Date")
return(NULL)
}
tot_ <- sqldf("SELECT * FROM bwAmbient_ JOIN bwEnergy_ ON bwAmbient_.Calender.Day = bwEnergy.Date")
tot_ <- merge(bwAmbient_,bwEnergy_,by.x = "Calendar.Day",by.y = "Date")
tot_ <- merge(bwAmbient_,bwEnergy_,by.x = c("Calendar.Day"),by.y = c("Date"))
View(bwAmbient_)
View(bwEnergy_)
colnames(bwEnergy_) <- c("Store","Date","Consumption")
tot_ <- merge(bwAmbient_,bwEnergy_,by.x = c("Calendar.Day"),by.y = c("Date"))
View(tot_)
View(tot_)
View(tot_)
colnames(tot_)
tot_ <- subset(tot_,select = c("Enthalpy...Avg","Relative.Humidity...Avg","Temperature...Avg","Daily.Trading.Minutes","Consumption"))
View(tot_)
plot(tot_)
bwSolar_ <- read.csv("C:/Users/aaron/OneDrive/Documents/City Energy Centre/Solar/IDCJAC0016_061387_1800_Data.csv")# Budgewoi
cnSolar_ <- read.csv("C:/Users/aaron/OneDrive/Documents/City Energy Centre/Solar/IDCJAC0016_086096_1800_Data.csv")# Coburg North
# The date column is separated into Year | Month | Day , so combine them and format as date.
bwSolar_$Date <- as.Date(paste(bwSolar_$Day,bwSolar_$Month,bwSolar_$Year,sep = '/'),'%d/%m/%Y') # budgewoi
cnSolar_$Date <- as.Date(paste(cnSolar_$Day,cnSolar_$Month,cnSolar_$Year,sep = '/'),'%d/%m/%Y') # coburg north
# add the store num to the data frames.
bwSolar_ <- cbind(5759,bwSolar_)
cnSolar_ <- cbind(7919,cnSolar_)
# Subset for year 2015 onwards
bwSolar_ <- subset(bwSolar_,bwSolar_$Year >= 2014)
cnSolar_ <- subset(cnSolar_,cnSolar_$Year >= 2014)
# extract plot variables.
plBw_ <- subset(bwSolar_,select = c("5759","Date","Daily.global.solar.exposure..MJ.m.m."))
colnames(plBw_) <- c("Store","Date","Solar.R") # standardise colnames
plCn_ <- subset(cnSolar_,select = c("7919","Date","Daily.global.solar.exposure..MJ.m.m."))
colnames(plCn_) <- c("Store","Date","Solar.R")
tot_ <- rbind(plBw_,plCn_) # merge both
# plot
plt_ <- plot_ly(tot_, x = as.Date(tot_$Date,'%Y-%m-%d'), y = Solar.R,color=as.factor(tot_$Store))
plt_ <- layout(plt_,title = "Solar Exposure by Year",xaxis = list(title="Date"),yaxis=list(title="Solar Radiation MJ/m.m"))
bwAmbient_ <- read.csv("C:/Users/aaron/OneDrive/Documents/City Energy Centre/Solar/5759AmbientData.csv",stringsAsFactors = FALSE)
cnAmbient_ <- read.csv("C:/Users/aaron/OneDrive/Documents/City Energy Centre/Solar/7919AmbientData.csv",stringsAsFactors = FALSE)
# recast date string as psixlt
bwAmbient_$Calendar.Day <- as.Date(bwAmbient_$Calendar.Day,"%d %B %Y")
cnAmbient_$Calendar.Day <- as.Date(cnAmbient_$Calendar.Day,"%d %B %Y")
# since we have alot of old and future data points subset these out.
# did a bit of testing, seems complete cases should give out good subset.
bwAmbient_ <- bwAmbient_[complete.cases(bwAmbient_),]
cnAmbient_ <- cnAmbient_[complete.cases(cnAmbient_),]
bwEnergy_ <- read.csv("C:/Users/aaron/OneDrive/Documents/City Energy Centre/Solar/5759MainMeterReadings.csv",stringsAsFactors = FALSE)
cnEnergy_ <- read.csv("C:/Users/aaron/OneDrive/Documents/City Energy Centre/Solar/7919MainMeterReadings.csv",stringsAsFactors = FALSE)
# recast date string as posixlt
bwEnergy_$Calendar.Day <- as.Date(bwEnergy_$Calendar.Day,"%d %B %Y")
cnEnergy_$Calendar.Day <- as.Date(cnEnergy_$Calendar.Day,"%d %B %Y")
# cbind store num and merge for plotting.
bwEnergy_ <- cbind(5759,bwEnergy_)
cnEnergy_ <- cbind(7919,cnEnergy_)
colnames(bwEnergy_) <- c("Store","Date","Consumption")
colnames(cnEnergy_) <- c("Store","Date","Consumption")
eTot_ <- rbind(bwEnergy_,cnEnergy_)
bwAmbient_ <- bwAmbient_[bwAmbient_$Calendar.Day >= as.Date("01/07/2013","%d/%m/%Y") & bwAmbient_$Calendar.Day <= as.Date("01/07/2014","%d/%m/%Y"), ]
bwEnergy_ <- bwEnergy_[bwEnergy_$Date >= as.Date("01/07/2013","%d/%m/%Y") & bwEnergy_$Date <= as.Date("01/07/2014","%d/%m/%Y"), ]
tot_ <- merge(bwAmbient_,bwEnergy_,by.x = c("Calendar.Day"),by.y = c("Date"))
View(tot_)
tot_ <- subset(tot_,select = c("Enthalpy...Avg","Relative.Humidity...Avg","Temperature...Avg","Daily.Trading.Minutes","Consumption"))
View(tot_)
plot(tot_)
mdl_ <- lm(tot_$Consumption ~ tot_$Enthalpy...Avg)
mdl_$coefficients
summary(mdl_.lm)$r.squared
summary(mdl_)$r.squared
mdl_ <- lm(tot_$Consumption ~ tot_$Temperature...Avg + tot_$Relative.Humidity...Avg)
summary(mdl_)$r.squared
mdl_ <- lm(tot_$Consumption ~ tot_$Temperature...Avg + tot_$Relative.Humidity...Avg + tot_$Enthalpy...Avg)
summary(mdl_)$r.squared
plot(tot_$Consumption ~ tot_$Temperature...Avg)
predict(mdl_,tot_$Temperature...Avg,tot_$Relative.Humidity...Avg,tot_$Enthalpy...Avg)
predict(mdl_,tot_$Temperature...Avg + tot_$Relative.Humidity...Avg + tot_$Enthalpy...Avg)
predict(mdl_,as.data.frame(cbind(tot_$Temperature...Avg,tot_$Relative.Humidity...Avg,tot_$Enthalpy...Avg)))
mdl_ <- lm(tot_$Consumption ~ tot_$Temperature...Avg + tot_$Relative.Humidity...Avg + tot_$Enthalpy...Avg + tot_$Daily.Trading.Minutes)
summary(mdl_)$r.squared
View(bwSolar_)
View(bwSolar_)
View(bwEnergy_)
bwSolar_ <- bwSolar_[bwSolar_$Date >= as.Date("01/07/2013","%d/%m/%Y") % bwSolar_ <= as.Date("01/07/2014","%d/%m/%Y"),]
bwSolar_ <- bwSolar_[bwSolar_$Date >= as.Date("01/07/2013","%d/%m/%Y") & bwSolar_ <= as.Date("01/07/2014","%d/%m/%Y"),]
bwSolar_ <- bwSolar_[bwSolar_$Date >= as.Date("01/07/2013","%d/%m/%Y") & bwSolar_$Date <= as.Date("01/07/2014","%d/%m/%Y"),]
View(bwSolar_)
bwSolar_ <- read.csv("C:/Users/aaron/OneDrive/Documents/City Energy Centre/Solar/IDCJAC0016_061387_1800_Data.csv")# Budgewoi
bwSolar_$Date <- as.Date(paste(bwSolar_$Day,bwSolar_$Month,bwSolar_$Year,sep = '/'),'%d/%m/%Y') # budgewoi
bwSolar_ <- cbind(5759,bwSolar_)
bwSolar_ <- subset(bwSolar_,bwSolar_$Year >= 2013)
View(bwSolar_)
bwSolar_ <- bwSolar_[bwSolar_$Date >= as.Date("01/07/2013","%d/%m/%Y") & bwSolar_$Date <= as.Date("01/07/2014","%d/%m/%Y"),]
View(bwSolar_)
View(tot_)
tot_ <- merge(bwAmbient_,bwEnergy_,by.x = c("Calendar.Day"),by.y = c("Date"))
View(tot_)
View(tot_)
View(bwSolar_)
tot_ <- merge(tot_,bwSolar_,by.x = c("Calendar.Day"),by.y = c("Date"))
View(tot_)
colnames(tot_)
tot_ <- subset(tot_,select = c("Daily.global.solar.exposure..MJ.m.m.","Enthalpy...Avg","Relative.Humidity...Avg","Temperature...Avg","Daily.Trading.Minutes","Consumption"))
plot(tot_)
mdl_ <- lm(tot_$Consumption ~ tot_$Temperature...Avg + tot_$Relative.Humidity...Avg + tot_$Enthalpy...Avg + tot_$Daily.Trading.Minutes + tot_$Daily.global.solar.exposure..MJ.m.m.)
summary(mdl_)$r.squared
mdl_ <- lm(tot_$Consumption ~ tot_$Temperature...Avg + tot_$Relative.Humidity...Avg + tot_$Enthalpy...Avg + tot_$Daily.Trading.Minutes)
summary(mdl_)$r.squared
plot_ly(tot_,x= Temperature...Avg,y = Enthalpy...Avg, z = Consumption, color = Relative.Humidity...Avg, mode = "markers" , type="scatter3d")
require(plotly)
plot_ly(tot_,x= Temperature...Avg,y = Enthalpy...Avg, z = Consumption, color = Relative.Humidity...Avg, mode = "markers" , type="scatter3d")
plot_ly(tot_,x= Temperature...Avg,y = Enthalpy...Avg, z = Consumption, color = Relative.Humidity...Avg, mode = "markers" , type="scatter3d", hoverinfo = "text", text = paste("Humidity", tot_$Relative.Humidity...Avg), colors = "Accent")
plot_ly(tot_,x= Temperature...Avg,y = Enthalpy...Avg, z = Consumption, color = Relative.Humidity...Avg, mode = "markers" , type="scatter3d", hoverinfo = "text", text = paste("Humidity", tot_$Relative.Humidity...Avg), colors = "Rainbow")
plot_ly(tot_,x= Temperature...Avg,y = Enthalpy...Avg, z = Consumption, color = Relative.Humidity...Avg, mode = "markers" , type="scatter3d", hoverinfo = "text", text = paste("Humidity", tot_$Relative.Humidity...Avg), colors = "Spectral")
plot_ly(tot_,x= Temperature...Avg,y = Enthalpy...Avg, z = Consumption, color = Relative.Humidity...Avg, mode = "markers" , type="scatter3d", hoverinfo = "text", text = paste("Humidity", tot_$Relative.Humidity...Avg), colors = "YlOrRd")
tot <- tot_
tot$Consumption <- log(tot$Consumption)
View(tot)
13/7
12/5
10.4
10/4
15.5/7
19/5
17.5/5
setwd("C:\Users\aaron\OneDrive\Documents\Monash Data Science\Data Visualisation\A1")
setwd("C:\\Users\\aaron\\OneDrive\\Documents\\Monash Data Science\\Data Visualisation\\A1")
list.files()
dt_ <- read.csv("Australian_Post_Codes_Lat_Lon.csv")
View(dt_)
vic_ <- dt_[dt_$state == "VIC",]
View(vic_)
vic_[,"Population"] <- rnorm(n = nrow(vic_),mean = 5000,4000)
View(vic_)
vic_[,"Population"] <- rnorm(n = nrow(vic_),mean = 5000,2000)
View(vic_)
clipOneThousand <- function(x){
if (x <= 0 ){
return(1000)
} else {
return(x)
}
}
vic_[,"Population"] <- sapply(X = vic_[,"Population"],clipOneThousand)
View(vic_)
clipOneThousand <- function(x){
if (x <= 0 ){
return(rnorm(1,1000,25))
} else {
return(x)
}
}
vic_[,"Population"] <- sapply(X = vic_[,"Population"],clipOneThousand)
View(vic_)
View(vic_)
vic_[,"Population"] <- runif(6:47637,nrow(vic_))
View(vic_)
vic_[,"Population"] <- sample(6:47637,nrow(vic_))
View(vic_)
vic_[,"Area"] <- rnorm(n = nrow(vic_),mean = 5,1)
View(vic_)
dt_ <- read.csv("Australian_Post_Codes_Lat_Lon.csv")
vic_ <- dt_[dt_$state == "VIC",]
vic_[,"Population"] <- sample(6:47637,nrow(vic_))
clipOneThousand <- function(x){
if (x <= 0 ){
return(rnorm(1,1000,25))
} else {
return(x)
}
}
vic_[,"Area"] <- rnorm(n = nrow(vic_),mean = 5,1)
View(vic_)
vic_[,"PRent"] <- rnorm(nrow(vic_),0.1,100.00)
View(vic_)
vic_[,"PRent"] <- runif(nrow(vic_),0.1,100.00)
View(vic_)
hist(vic_$Population)
vic_[,"AgeMedian"] <- rnorm(n = nrow(vic_),mean = 30,10)
View(vic_)
clipToNormBound <- function(x,bound=1000){
if (x <= 0 ){
return(rnorm(1,bound,bound/25))
} else {
return(x)
}
}
vic_[,"AgeMedian"]<- clipToNormBound(vic_[,"AgeMedian"],3)
View(dt_)
View(vic_)
vic_[,"AgeMedian"]<- sapply(vic_[,"AgeMedian"] ,clipToNormBound(x,3))
vic_[,"AgeMedian"]<- sapply(vic_[,"AgeMedian"] ,clipToNormBound(bound = 3))
vic_[,"AgeMedian"]<- sapply(vic_[,"AgeMedian"] ,clipToNormBound,bound = 3)
View(vic_)
hist(vic_$AgeMedian)
(15,000 + 69000)
(15,000 + 69000)2
(15,000 + 69000)/2
(15000 + 69000)/2
vic_[,"IncMedian"] <- rnorm(n = nrow(vic_), mean = 42000, sd = 15000)
View(vic_)
vic_[,"IncMedian"] <- rnorm(n = nrow(vic_), mean = 42000, sd = 10000)
View(vic_)
vic_[,"IncMedian"] <- rnorm(n = nrow(vic_), mean = 42000, sd = 5000)
View(vic_)
vic_[,"IncMedian"] <- rnorm(n = nrow(vic_), mean = 42000, sd = 7500)
View(vic_)
vic_[,"EduAvg"] <- rnorm(n = nrow(vic_), mean = 12,3)
View(vic_)
vic_[,"EduAvg"] <- sapply(vic_[,"EduAvg"],clipToNormBound, bound = 10)
View(vic_)
vic_[,"EduAvg"] <- sapply(vic_[,"EduAvg"],clipToNormBound, bound = 14)
View(vic_)
clipToNormBound <- function(x,bound=1000,clip = 0){
if (x <= 0 ){
return(rnorm(1,bound,bound/25))
} else {
return(x)
}
}
vic_[,"EduAvg"] <- sapply(vic_[,"EduAvg"],clipToNormBound, bound = 14, clip = 10)
View(vic_)
clipToNormBound <- function(x,bound=1000,clip = 0){
if (x <= clip ){
return(rnorm(1,bound,bound/25))
} else {
return(x)
}
}
vic_[,"EduAvg"] <- sapply(vic_[,"EduAvg"],clipToNormBound, bound = 14, clip = 10)
View(vic_)
hist(vic_$EduAvg)
rnorm.between <- function(n, minimum = 0, maximum = 1)
{
## CREDIT :: https://gist.github.com/tomhopper/19f07fc96db8d149b24f
x <- rnorm(n)
max_x <- max(x)
min_x <- min(x)
x <- x - min_x
x <- x / (max_x - min_x)
x <- x * (maximum - minimum)
x <- x + minimum
return(x)
}
vic_[,"Population"] <- rnorm.between(nrow(vic_),10,41000)
View(vic_)
vic_[,"Population"] <- sapply(vic_[,"Population"],ceiling)
View(vic_)
vic_[,"PRent"] <- rnorm.between(nrow(vic_),1,100)
View(vic_)
vic_[,"PRent"] <- rnorm.between(nrow(vic_),4,95)
vic_[,"IncMedian"] <- rnorm.between(nrow(vic_),15323,73122)
vic_[,"EduAvg"] <- rnorm.between(nrow(vic_),3,12)
View(vic_)
vic_[,"EduAvg"] <- rnorm.between(nrow(vic_),10,25)
View(vic_)
vic_[,"EduAvg"] <- sapply(vic_[,"EduAvg"],floor)
View(dt_)
View(vic_)
vic_[,"PRCrime"] <- rnorm.between(nrow(vic_),232,6439)
vic_[,"PRCrime"] <- sapply(vic_[,"PRCrime"],ceiling)
vic_[,"PSCrime"] <- rnorm.between(nrow(vic_),164,8231)
vic_[,"PSCrime"] <- sapply(vic_[,"PSCrime"],floor)
View(vic_)
write.csv(vic_,"generated_Vic_suburb_data.csv")
require(ggplot2)
require(plotly)
plot(vic_)
